Requirements:
 - The solution will be a program, and you will need to give a demonstration of how it works.
 - You will need to hand in the source code and an executable (or interpretable) code, either by email, on memory stick, as a pointer to a place where it can be downloaded etc.
 - You must also provide a short instruction how to run the program.
 - The time when you will give a demonstration can be arranged individually (by email); depending from circumstances there might be several “official times”, which will be announced later.
 
The task in steps:

 2. Write a program that verifies your certificate (since it is a root certificate, it is sufficient to check whether certificate issuer and subject are the same and whether a digital signature of the issuer matches the subject’s public key).
 
 3. Write a program that encrypts and decrypts a message of suitable length using the public RSA key from the certificate/private key file that you have created and one of RSA encryption/padding schemes specified in PKCS #1 standard.
 
Technical requirements:
 - You can either implement creating of certificate compliant to X.509 format
	- or you can use libraries (including script-based), however
  each of the steps above should be performed by a single non-interactive run of the program.
	- In particular, the information about the issuer and the subject (and other parameters you chose to provide) of the certificate should be read from a text file (but it is up to you what syntax you use for this file).

 - The program(s) should allow executing each of the 3 steps separately; also there should be option to execute separately encryption and decryption parts of step 3.
 	
 - The verification program should be able read both the certificate and private key from the files you had created in previous step.
	- The same applies to encryption/decryption program for step 3, which in addition has to be able to read and store encrypted/non-encrypted messages in files.

--
MD2_X509
|___menu
   |___cipher
   |___inputfilename
   |___inputoption
   |___verify
   |___x509
      |___tbscertificate
      |  |___name
      |___writef